buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/central" }
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'war'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/central" }
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.springframework', name: 'spring-aop', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-aspects', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '5.2.8.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.2.8.RELEASE'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'
    compile group: 'org.aspectj', name: 'aspectjtools', version: '1.9.6'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.9.6'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.5.5'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.5'
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.8.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    providedCompile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task "create-dirs" {
    sourceSets*.java.srcDirs*.each {
        it.mkdirs()
    }
    sourceSets*.resources.srcDirs*.each{
        it.mkdirs()
    }
}

task mapperXmlCopy(type: Copy) {
    copy {
        from("src/main/kotlin") {
            include "**/*.xml"
            include "**/*.properties"
        }
        into "${buildDir}/classes/kotlin/main"
    }
    print "Copy Success\n"
}